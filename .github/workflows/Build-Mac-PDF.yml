name: macOS build

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - run: pip install -r requirements.txt pyinstaller

      - name: Build .app
        run: pyinstaller -y --windowed --name InvoiceMerge invoice_flatten_merge.py

      - name: Install Ghostscript
        run: brew install ghostscript

      - name: Vendor Ghostscript
        run: |
          GS_PREFIX=$(brew --prefix ghostscript)
          mkdir -p dist/InvoiceMerge.app/Contents/Resources/ghostscript
          cp "$GS_PREFIX/bin/gs" dist/InvoiceMerge.app/Contents/Resources/ghostscript/
          cp -R "$GS_PREFIX/lib" "$GS_PREFIX/share/ghostscript" \
            dist/InvoiceMerge.app/Contents/Resources/ghostscript/

      - name: Import signing certificate
        if: ${{ secrets.MACOS_CERTIFICATE }}
        run: |
          echo "$MACOS_CERTIFICATE" | base64 --decode > signing.p12
          security create-keychain -p "" build.keychain
          security import signing.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain

      - name: Codesign .app
        if: ${{ secrets.MACOS_CERTIFICATE }}
        run: |
          codesign --deep --force --options runtime --sign "$MACOS_CODESIGN_IDENTITY" dist/InvoiceMerge.app

      - name: Notarize .app
        if: ${{ secrets.APPLE_ID }} && ${{ secrets.APPLE_APP_PASSWORD }}
        run: |
          xcrun notarytool submit dist/InvoiceMerge.app \
            --apple-id "$APPLE_ID" \
            --team-id "$APPLE_TEAM_ID" \
            --password "$APPLE_APP_PASSWORD" --wait

      - name: Staple notarization ticket
        if: ${{ secrets.APPLE_ID }} && ${{ secrets.APPLE_APP_PASSWORD }}
        run: xcrun stapler staple dist/InvoiceMerge.app

      - name: Create DMG
        run: |
          hdiutil create -volname InvoiceMerge \
            -srcfolder dist/InvoiceMerge.app -ov -format UDZO InvoiceMerge.dmg

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: InvoiceMerge-Mac-DMG
          path: InvoiceMerge.dmg
